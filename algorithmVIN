#!/usr/bin/env python3

# Algorithm for calculating the check digit of the vehicle identification number (VIN)
# according to USA/Federal 49 CFR 565

# VIN decipherment:
# 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
# WMI   |         |  | 
# (1-3) |         |  |
#       VDS (4-8) |  |
#                 |  |
#    check-digit (9) | 
#                 |  model year (10)
#                 VIS (9-17)

# algorithmVIN.py

class VINCheck():
  
  def __init__(self):

    self.assigned_values = {"A":1, "B":2, "C":3, "D":4, "E":5, "F":6, "G":7, "H":8,"J":1, "K":2, \
      "L":3, "M":4, "N":5, "P":7, "R":9, "S":2, "T":3, "U":4, "V":5, "W":6, "X":7, "Y":8, "Z":9, \
        "1":1, "2":2, "3":3, "4":4, "5":5, "6":6, "7":7, "8":8, "9":9, "0":0}

    self.weight_factor = {"1":8, "2":7, "3":6, "4":5, "5":4, "6":3, "7":2, "8":10, "10":9, "11":8, \
      "12":7, "13":6, "14":5, "15":4, "16":3, "17":2}

    self.year_code = {2005:5, 2006:6, 2007:7, 2008:8, 2009:9, 2010:"A", 2011:"B", \
      2012:"C", 2013:"D", 2014:"E", 2015:"F", 2016:"G", 2017:"H", 2018:"J", \
      2019:"K", 2020:"L", 2021:"M", 2022:"N", 2023:"P", 2024:"R", 2025:"S", 2026:"T", \
      2027:"V", 2028:"W", 2029:"X", 2030:"Y", 2031:"1", 2032:"2", 2032:"3"}

    self.check_digit = {"0.000":0, "0.091":1, "0.182":2, "0.273":3, "0.364":4, "0.455":5, "0.545":6, \
      "0.636":7, "0.727":8, "0.818":9, "0.909":"X"}

  def checkVIN(self, vin):
    
    position = 0
    add = 0
    
    for digit in vin:
      value = self.assigned_values.get(digit)
      position += 1
      if position == 9:
        continue # Check-Digit
      weight = self.weight_factor.get(str(position))
      intMult = int(value) * int(weight)
      add = add + intMult

    fraction = add / 11
    fraction = fraction - int(fraction)
    fraction = "%.3f" % fraction
    return_result = self.check_digit.get(fraction)
    return return_result

# Call the main function if algorithmVIN.py is run instead of the module:
if __name__ == '__main__': 
  
  vin = "ABC12JK080BL41394"
  nineth_digit = vin[8]

  result = VINCheck()
  data = result.checkVIN(vin)

  if str(data) == str(nineth_digit):
    print("The check digit is correct.")
    print("WMI: " + vin[0:3])
    print("VDS: " + vin[3:7] + " " + vin [7:8])
    print("VIS: " + vin[8:])
  else:
    print("The VIN is not correct.\nDeviation:")
    print("Nineth digit: \t\t" + str(nineth_digit))
    print("Calculated check digit: " + str(data))
